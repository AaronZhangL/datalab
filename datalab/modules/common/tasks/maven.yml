---

- name: Create maven user
  user: name="{{ maven.user }}"
        shell=/bin/false
        state=present
  sudo: yes

- file: path="{{ maven.download_dir }}" state=directory

- stat: path={{maven.file}}
  register: maven_file

- name: get maven prebuilt asc
  shell: wget -q -O {{maven.file}}.asc {{maven.url}}.asc
  when: maven_file.stat.exists

- name: get maven keys
  shell: wget -q -O {{ maven.download_dir }}/KEYS {{apache_mirror}}maven/KEYS
  register: maven_keys
  when: maven_file.stat.exists

- name: import maven keys
  shell: gpg --import {{ maven.download_dir }}/KEYS
  when: maven_file.stat.exists and maven_keys|success

- name: verify maven prebuilt file
  shell: gpg --verify {{maven.file}}.asc {{maven.file}}
  register: maven_file_check
  when: maven_file.stat.exists

# Download Maven
- name: download maven
  shell: "wget -q -O {{maven.file}} {{maven.url}}"
  when: not maven_file.stat.exists or (not maven_file_check|success)

- name: Install Maven installation directory
  file:
    state=directory
    mode=0755
    dest={{ maven.install_dir }}
  sudo: yes

- name: Install Maven
  unarchive: src="{{maven.file}}"
             dest="{{maven.install_dir}}"
             copy=no
  sudo: yes

- name: Install Maven bin directory
  file:
    state=directory
    mode=0755
    dest={{ maven.bin_path }}
  sudo: yes

- name: Install Maven binary
  file:
    state=link
    force=true
    src={{ maven.install_dir }}/apache-maven-{{ maven.version }}/bin/mvn
    dest={{ maven.bin_path }}/mvn
  sudo: yes

- name: Create default maven lib directory
  file:
    state=directory
    dest="{{ maven.lib_dir }}"
    owner="{{ maven.user }}"
    group="{{ maven.user }}"
    mode=0777
  sudo: yes

- name: Deploy default maven settings.xml
  template:
    src=maven_settings.xml.j2
    dest="{{ maven.install_dir }}/apache-maven-{{ maven.version }}/conf/settings.xml"
    owner="{{ maven.user }}"
    group="{{ maven.user }}"
  sudo: yes
