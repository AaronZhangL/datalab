---

# Retrieve mesos master
- name: Retrieve mesos master
  shell: mesos-resolve `cat /etc/mesos/zk`
  sudo: yes
  register: master_response
  when: not mesos_dns_ips is defined or not master_api is defined

- set_fact: master_api=http://{{master_response.stdout}}
  when: not mesos_dns_ips is defined or not master_api is defined

# Choose appropriate mesos slaves
- name: Retrieve mesos slaves
  uri: url="{{master_api}}/master/state.json" HEADER_Content-Type="application/json" method=GET return_content=yes status_code=200
  register: mesos_state_response
  when: not mesos_dns_ips is defined

- set_fact: slaves="{{(mesos_state_response.content|from_json).slaves|list}}"
  when: not mesos_dns_ips is defined

- set_fact: mesos_dns_ips="{% for slave in slaves%}{%if slave.active|bool and slave.attributes['node_dns']|bool%}{{slave.pid | group('.*@([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}):[0-9]+', 1) + ' '}}{%endif%}{%endfor%}"
  when: not mesos_dns_ips is defined

#- debug: msg="{{mesos_dns_ips|trim|split(' ')}}"

# Deploy mesos-dns app
- name: Retrieve mesos-dns app
  uri: url="{{marathon_api}}/{{mesos_dns_id}}" HEADER_Content-Type="application/json" method=GET return_content=yes status_code=200,404
  register: mesos_dns_app_response

- name: remove mesos-dns app
  uri: url={{marathon_api}}/{{mesos_dns_id}} HEADER_Content-Type="application/json" method=DELETE return_content=yes status_code=200,204
  when: "'message' not in {{mesos_dns_app_response.content}}"

- name: copy mesos-dns marathon json file
  template: src=mesos_dns.json dest=/tmp/mesos_dns.json

- name: Install mesos-dns application
  shell: 'curl -X POST -H "Content-Type: application/json" {{marathon_api}}?force=true -d@/tmp/mesos_dns.json'
  register: install_mesos_dns_response

- debug: var=install_mesos_dns_response
  when: install_mesos_dns_response is defined

- name: Wait untils mesos-dns app is available
  shell: curl --head --silent {{marathon_api}}/{{mesos_dns_id}}/tasks
  register: result
  until: result.stdout.find("200 OK") != -1
  retries: 12
  delay: 5

# Update slaves
- name: clean resolve.conf
  lineinfile: dest=/etc/resolv.conf regexp='^nameserver\s([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})\s\#\smesos-dns' state=absent
  delegate_to: "{{item}}"
  with_items:
    - "{{groups['slave']|list}}"

- name: update resolve.conf
  lineinfile: "dest=/etc/resolv.conf line='nameserver {{ item[1] }} # mesos-dns' insertbefore=BOF"
  delegate_to: "{{item[0]}}"
  with_nested:
    - "{{groups['slave']|list}}"
    - "{{mesos_dns_ips|trim|split(' ')|list}}"
