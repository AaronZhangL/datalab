---

# Install Debian dependencies
- name: Install Debian dependencies
  apt: pkg={{item}} state=present update_cache=yes cache_valid_time=3600
  with_items:
    - tar
    - curl
    - wget
  sudo: yes
  when: ansible_os_family == 'Debian'

# Install Redhat dependencies
- name: Install Redhat dependencies through proxy
  yum: name={{item}} state=present update_cache=yes
  with_items:
    - unzip
    - wget
  environment: __proxy_env #in order to use proxy url with credentials
  sudo: yes
  when: proxy_enabled|bool and (ansible_os_family == 'RedHat')

- name: Install Redhat dependencies
  yum: name={{item}} state=present update_cache=yes
  with_items:
    - unzip
    - wget
  sudo: yes
  when: (not proxy_enabled|bool) and (ansible_os_family == 'RedHat')

# Prepare
- file: path="{{ flume.home_dir }}" state=absent
  sudo: yes

- file: path="{{ flume.download_dir }}" state=directory

# Get flume
- name: get flume
  shell: "wget --proxy=off -q -O {{flume.download_dir}}/{{flume.package_name}}.tar.gz {{apache_mirror}}flume/{{flume.version}}/{{flume.package_name}}.tar.gz"
  when: not proxy_enabled|bool

- name: get flume through proxy
  shell: "wget --proxy=on --proxy-user={{proxy_login}} --proxy-passwd={{proxy_password}} -q -O {{flume.download_dir}}/{{flume.package_name}}.tar.gz {{apache_mirror}}flume/{{flume.version}}/{{flume.package_name}}.tar.gz"
  environment: proxy_env
  when: proxy_enabled|bool

# Install flume
- name: Extract and install flume
  unarchive: src="{{ flume.download_dir }}/{{flume.package_name}}.tar.gz"
             dest={{ flume.download_dir }}
             copy=no

- name: rename install dir
  shell: "mv {{ flume.download_dir}}/{{flume.package_name}} {{flume.home_dir}}"
  sudo: yes

# Configure flume
- file: path="{{ flume.log.dir }}" state=directory
  sudo: yes

- file: path="{{ flume.config.dir }}" state=directory
  sudo: yes

- name: Configure flume
  template: src=flume-conf.properties
            dest={{ flume.config.dir }}/
  sudo: yes

