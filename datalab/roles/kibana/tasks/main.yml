---

# Install Debian dependencies
- name: Install Debian dependencies
  apt: pkg={{item}} state=present update_cache=yes cache_valid_time=3600
  with_items:
    - unzip
    - wget
  sudo: yes
  when: ansible_os_family == 'Debian'

# Install Redhat dependencies
- name: Install Redhat dependencies
  yum: name={{item}} state=present update_cache=yes
  with_items:
    - unzip
    - wget
  sudo: yes
  when: ansible_os_family == 'RedHat'

# Configure user and group
- name: Create Kibana group
  group: name={{ kibana.group }} gid={{kibana.gid}}
  sudo: yes

- name: Create Kibana user
  user: name={{ kibana.user }} group={{ kibana.group }} createhome=no uid={{kibana.uid}} system=yes shell=/bin/bash
  sudo: yes

#- name: ensure base dir exists
#  file: path="{{ kibana.home_dir }}" state=directory owner="{{ kibana.user }}" group="{{ kibana.group }}"

- file: path="{{ kibana.home_dir }}" state=absent
  sudo: yes

- file: path="{{ kibana.download_dir }}" state=directory

- stat: path={{kibana.file}} get_checksum=yes
  register: kibana_file

- shell: curl {{curl_proxy_args}} --stderr /dev/null {{kibana.url}}.sha1.txt
  register: kibana_sha1
  when: kibana_file.stat.exists

- name: Download Kibana
  shell: wget -q -O {{ kibana.file }} {{ kibana.url }}
  when: not kibana_file.stat.exists or (kibana_file.stat.checksum != (kibana_sha1.stdout|split(' '))[0])

- name: Extract and install Kibana
  unarchive: src="{{ kibana.file }}"
             dest={{ kibana.download_dir }}
             copy=no

- name: rename install dir
  shell: "mv {{ kibana.download_dir}}/{{kibana.package_name}} {{kibana.home_dir}}"
  sudo: yes

- name: Configure Kibana
  template: src=kibana.yml.j2
            dest={{ kibana.home_dir }}/config/kibana.yml
            owner="{{ kibana.user }}"
            group="{{ kibana.group }}"
  sudo: yes

- name: Create kibana log dir if it does not exist
  file: path={{ kibana.log.dirname }}
        state=directory
        owner="{{ kibana.user }}"
        group="{{ kibana.group }}"
  sudo: yes

- name: Set log file permissions
  file: path={{ kibana.log.file }} state=touch owner={{ kibana.user }} group={{ kibana.group }} mode=0644
  sudo: yes

- name: Configure Kibana log rotation
  template: src=logrotate_kibana.j2 dest=/etc/logrotate.d/kibana
  sudo: yes
  when: ansible_os_family == 'Debian' or ansible_os_family == 'RedHat'

- file: path=/etc/init state=directory
  sudo: yes
  when: ansible_os_family == 'Debian' or ansible_os_family == 'RedHat'

- name: Configure Kibana service definition
  template: src=kibana.conf.j2 dest=/etc/init/kibana.conf
  sudo: yes
  when: ansible_os_family == 'Debian' or ansible_os_family == 'RedHat'

# Register kibana service on boot
- name: Ensure Kibana is {{ kibana.service.state }} after boot
  service: name=kibana enabled={{ kibana.service.enabled }} state={{ kibana.service.state }}
  sudo: yes
  when: (ansible_os_family == 'Debian' or ansible_os_family == 'RedHat') and kibana.service.enabled|bool
